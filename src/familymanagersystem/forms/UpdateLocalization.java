package familymanagersystem.forms;

import familymanagersystem.Familia;
import familymanagersystem.Localizacao;
import static familymanagersystem.forms.RegistrationMainScreenInfoFields.defaultFamilyFilePath;
import static familymanagersystem.forms.RegistrationMainScreenInfoFields.familyLastname;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Dário Silva & Délcio Morais
 * @since 2023
 * @version 1.0
 */
public class UpdateLocalization extends javax.swing.JFrame {

    /**
     * Creates new form UpdateLocalization
     */
    public UpdateLocalization() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInfoFieldsScreenBackground = new javax.swing.JPanel();
        jProvinceLabel = new javax.swing.JLabel();
        jProvinceField = new javax.swing.JTextField();
        jCityLabel = new javax.swing.JLabel();
        jCityField = new javax.swing.JTextField();
        jHoodLabel = new javax.swing.JLabel();
        jHoodField = new javax.swing.JTextField();
        jUpdateLocationButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Edit Family's Location's Info");
        setLocation(new java.awt.Point(390, 90));
        setName("Update Localization Info"); // NOI18N
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jInfoFieldsScreenBackground.setBackground(new java.awt.Color(19, 19, 19));

        jProvinceLabel.setBackground(new java.awt.Color(255, 255, 255));
        jProvinceLabel.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        jProvinceLabel.setForeground(new java.awt.Color(255, 255, 255));
        jProvinceLabel.setText("New Province");
        jProvinceLabel.setFocusable(false);

        jProvinceField.setBackground(new java.awt.Color(22, 22, 22));
        jProvinceField.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jProvinceField.setForeground(new java.awt.Color(255, 255, 255));
        jProvinceField.setToolTipText("Please fill out this field");
        jProvinceField.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(37, 37, 37)));

        jCityLabel.setBackground(new java.awt.Color(255, 255, 255));
        jCityLabel.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        jCityLabel.setForeground(new java.awt.Color(255, 255, 255));
        jCityLabel.setText("New City");
        jCityLabel.setFocusable(false);

        jCityField.setBackground(new java.awt.Color(22, 22, 22));
        jCityField.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jCityField.setForeground(new java.awt.Color(255, 255, 255));
        jCityField.setToolTipText("Please fill out this field");
        jCityField.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(37, 37, 37)));

        jHoodLabel.setBackground(new java.awt.Color(255, 255, 255));
        jHoodLabel.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        jHoodLabel.setForeground(new java.awt.Color(255, 255, 255));
        jHoodLabel.setText("New Hood");
        jHoodLabel.setFocusable(false);

        jHoodField.setBackground(new java.awt.Color(22, 22, 22));
        jHoodField.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jHoodField.setForeground(new java.awt.Color(255, 255, 255));
        jHoodField.setToolTipText("Please fill out this field");
        jHoodField.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(37, 37, 37)));
        jHoodField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jHoodFieldActionPerformed(evt);
            }
        });

        jUpdateLocationButton.setBackground(new java.awt.Color(42, 42, 42));
        jUpdateLocationButton.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jUpdateLocationButton.setForeground(new java.awt.Color(255, 255, 255));
        jUpdateLocationButton.setText("Complete Registration");
        jUpdateLocationButton.setToolTipText("press to register");
        jUpdateLocationButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jUpdateLocationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdateLocationButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInfoFieldsScreenBackgroundLayout = new javax.swing.GroupLayout(jInfoFieldsScreenBackground);
        jInfoFieldsScreenBackground.setLayout(jInfoFieldsScreenBackgroundLayout);
        jInfoFieldsScreenBackgroundLayout.setHorizontalGroup(
            jInfoFieldsScreenBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInfoFieldsScreenBackgroundLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(jInfoFieldsScreenBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProvinceLabel)
                    .addComponent(jProvinceField, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCityLabel)
                    .addComponent(jCityField, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHoodLabel)
                    .addComponent(jHoodField, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jUpdateLocationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jInfoFieldsScreenBackgroundLayout.setVerticalGroup(
            jInfoFieldsScreenBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInfoFieldsScreenBackgroundLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jProvinceLabel)
                .addGap(6, 6, 6)
                .addComponent(jProvinceField, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jCityLabel)
                .addGap(6, 6, 6)
                .addComponent(jCityField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(jHoodLabel)
                .addGap(6, 6, 6)
                .addComponent(jHoodField, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(jUpdateLocationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 30, Short.MAX_VALUE))
        );

        getContentPane().add(jInfoFieldsScreenBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jHoodFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jHoodFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jHoodFieldActionPerformed

    private void jUpdateLocationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdateLocationButtonActionPerformed

        //attribuing the form fields values to my attributes
        String newFamilyProvince = jProvinceField.getText();
        String newFamilyCity = jCityField.getText();
        String newFamilyHood = jHoodField.getText();

        //checks if all fields are empty
        if (newFamilyProvince.isBlank() && newFamilyHood.isBlank() && newFamilyCity.isBlank()) {
            JOptionPane.showMessageDialog(null, "<html>You Need To Fill All The Fields</html>", "Please, Fill Out All Fields", 0);
        } else {
            //checks if a field is empty
            if (newFamilyProvince.isBlank() || newFamilyHood.isBlank() || newFamilyCity.isBlank()) {
                JOptionPane.showMessageDialog(null, "You Need To Fill All The Fields", "Please, Fill Out All Fields", 0);
            } else {

                try {
                    //gets the family info file
                    File familyInformationFile = new File(defaultFamilyFilePath + familyLastname + "\\info" + "\\about.txt");
                    //deletes the old file
                    familyInformationFile.delete();
                    /*creating another file*/
                    File updatedLocation = new File(defaultFamilyFilePath + familyLastname + "\\info" + "\\about.txt");
                    //setts all values to the 'Familia' class attributes
                    try ( //creates a file writer object for the file
                            FileWriter updatedLocationWriter = new FileWriter(updatedLocation)) {
                        //setts all values to the 'Familia' class attributes
                        Familia.setFamilyLastname(familyLastname);
                        Localizacao.setCity(newFamilyCity);
                        Localizacao.setHood(newFamilyHood);
                        Localizacao.setProvince(newFamilyProvince);
                        //writtes the given data, by the user, to the file
                        updatedLocationWriter.write("ID:" + Familia.getFamilyId() + "\n");
                        updatedLocationWriter.write("Lastname:" + Familia.getFamilyLastname() + "\n");
                        updatedLocationWriter.write("Province:" + Localizacao.getProvince() + "\n");
                        updatedLocationWriter.write("City:" + Localizacao.getCity() + "\n");
                        updatedLocationWriter.write("Neighborhood:" + Localizacao.getHood() + "\n");
                        updatedLocationWriter.write("Contact:" + Familia.getPhoneNumber());
                        
                        //closes the FileWriter Object
                        updatedLocationWriter.close();
                        
                        //sucess message
                        JOptionPane.showMessageDialog(null, "Update Complete !", "Family Location update process", 1);
                    }
                } catch (IOException ex) {
                    Logger.getLogger(UpdateLocalization.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jUpdateLocationButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateLocalization.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateLocalization.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateLocalization.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateLocalization.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateLocalization().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jCityField;
    private javax.swing.JLabel jCityLabel;
    private javax.swing.JTextField jHoodField;
    private javax.swing.JLabel jHoodLabel;
    private javax.swing.JPanel jInfoFieldsScreenBackground;
    private javax.swing.JTextField jProvinceField;
    private javax.swing.JLabel jProvinceLabel;
    private javax.swing.JButton jUpdateLocationButton;
    // End of variables declaration//GEN-END:variables
}
